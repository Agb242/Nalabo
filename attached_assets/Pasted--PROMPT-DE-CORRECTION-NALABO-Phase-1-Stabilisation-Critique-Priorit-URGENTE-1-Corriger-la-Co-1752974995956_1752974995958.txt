üéØ PROMPT DE CORRECTION NALABO
Phase 1 : Stabilisation Critique (Priorit√© URGENTE)
1. Corriger la Connexion Base de Donn√©es
Objectif : √âliminer les timeouts et reconnexions
Actions :

Configurer pool de connexions Neon optimis√©
Ajouter retry logic automatique
Impl√©menter healthcheck DB
2. Cr√©er Interface Admin Minimale
Objectif : Permettre la configuration des clusters K8s
Actions :

Page admin pour gestion clusters
Monitoring sessions actives en temps r√©el
Interface de configuration Infrastructure Manager
3. Impl√©menter Isolation Utilisateur Compl√®te
Objectif : S√©curiser les donn√©es par utilisateur
Actions :

Filtrer TOUTES les requ√™tes par userId
S√©curiser les endpoints avec middleware d'ownership
Isoler m√©triques dashboard par utilisateur
Phase 2 : Reconnexion du Workflow d'Ateliers
4. Connecter WorkshopBuilder √† l'Orchestrateur
Objectif : R√©tablir le flow cr√©ation ‚Üí ex√©cution
Actions :

Int√©grer sauvegarde avec EnhancedWorkshopOrchestrator
Valider templates avant sauvegarde
Synchroniser cr√©ation/ex√©cution d'ateliers
5. Impl√©menter Syst√®me de Preview
Objectif : Permettre test des ateliers avant publication
Actions :

Modal de preview avec simulation environnement
Validation des √©tapes en mode test
Aper√ßu rendu final utilisateur
Phase 3 : Coh√©rence Documentation ‚Üî Code
6. Synchroniser Features Document√©es
Objectif : Aligner doc et impl√©mentation
Actions :

Marquer clairement features "En d√©veloppement" dans la doc
Impl√©menter gamification de base (points simples)
Cr√©er syst√®me de certification minimal
7. Optimiser Infrastructure K8s
Objectif : Stabiliser vCluster et monitoring
Actions :

Am√©liorer gestion lifecycle vCluster
Ajouter m√©triques ressources temps r√©el
Impl√©menter cleanup automatique sessions expir√©es
Prompt Technique Sp√©cifique :
"Corrige les incoh√©rences critiques du projet Nalabo en 3 phases prioritaires :
PHASE 1 (URGENT) :
1. Stabilise la connexion Neon PostgreSQL avec pool optimis√© et retry logic
2. Cr√©e une interface admin minimale pour g√©rer les clusters K8s et monitorer les sessions
3. S√©curise l'isolation des donn√©es utilisateur avec filtrage syst√©matique par userId
PHASE 2 (FONCTIONNEL) :
4. Reconnecte WorkshopBuilder √† EnhancedWorkshopOrchestrator pour un workflow coh√©rent
5. Impl√©mente un syst√®me de preview d'ateliers avant publication
6. Ajoute validation des templates et gestion d'erreurs robuste
PHASE 3 (COH√âRENCE) :
7. Synchronise la documentation avec l'√©tat r√©el du code
8. Impl√©mente les features de base document√©es (gamification simple)
9. Optimise l'infrastructure K8s avec monitoring temps r√©el
Chaque correction doit :
- Maintenir la compatibilit√© existante
- Ajouter des tests unitaires
- Inclure gestion d'erreurs appropri√©e
- Respecter l'architecture modulaire
- Conserver les performances
Focus sur la stabilit√© et l'utilisabilit√© avant les features avanc√©es."
Crit√®res de Validation :
‚úÖ Phase 1 R√©ussie :

Plus d'erreurs de connexion DB
Interface admin accessible et fonctionnelle
Dashboard affiche uniquement les donn√©es de l'utilisateur connect√©
‚úÖ Phase 2 R√©ussie :

Cr√©ation d'atelier ‚Üí sauvegarde ‚Üí ex√©cution fonctionne end-to-end
Preview d'ateliers op√©rationnel
Validation templates robuste
‚úÖ Phase 3 R√©ussie :

Documentation align√©e avec le code
Features document√©es impl√©ment√©es ou marqu√©es "En d√©veloppement"
Infrastructure stable avec monitoring
Ce prompt priorise la stabilit√© et la fonctionnalit√© core avant d'ajouter de nouvelles features, garantissant une base solide pour le d√©veloppement futur de Nalabo.